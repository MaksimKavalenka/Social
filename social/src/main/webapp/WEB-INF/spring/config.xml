<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:security="http://www.springframework.org/schema/security"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-2.5.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-4.1.xsd">

  <import resource="config/DataSource.xml"/>
  <import resource="config/Hibernate.xml"/>

  <context:component-scan base-package="by.training"/>
  <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
  <mvc:resources mapping="/**" location="/static/"/>
  <mvc:annotation-driven/>
  <tx:annotation-driven/>

  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="prefix" value="/html/"/>
    <property name="suffix" value=".html"/>
  </bean>

  <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>

  <bean id="notificationDAO" class="by.training.database.editor.NotificationDatabaseEditor"/>
  <bean id="postDAO" class="by.training.database.editor.PostDatabaseEditor"/>
  <bean id="roleDAO" class="by.training.database.editor.RoleDatabaseEditor"/>
  <bean id="topicDAO" class="by.training.database.editor.TopicDatabaseEditor"/>
  <bean id="userDAO" class="by.training.database.editor.UserDatabaseEditor"/>

  <bean id="databaseInitializer" class="by.training.spring.component.DatabaseInitializer"/>
  <bean id="userDetailsService" class="by.training.spring.service.UserDetailsServiceSecurity"/>

  <bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
    <constructor-arg value="DEVELNOTES_REMEMBER_TOKEN"/>
    <constructor-arg ref="userDetailsService"/>
    <property name="cookieName" value="DEVELNOTES_REMEMBER_ME_COOKIE"/>
    <property name="useSecureCookie" value="false"/>
    <property name="alwaysRemember" value="false"/>
  </bean>

  <bean id="csrfTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
    <property name="headerName" value="X-XSRF-TOKEN"/>
  </bean>

  <bean id="http403ForbiddenEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>

  <security:http>
    <security:intercept-url pattern="/feed" access="hasRole('USER')"/>
    <security:intercept-url pattern="/topics" access="hasRole('USER')"/>
    <security:intercept-url pattern="/topic/*" access="hasRole('USER')"/>
    <security:intercept-url pattern="/post/*" access="hasRole('USER')"/>
    <security:intercept-url pattern="/notifications" access="hasRole('USER')"/>
    <security:intercept-url pattern="/search" access="hasRole('USER')"/>
    <security:intercept-url pattern="/profile" access="hasRole('USER')"/>
    <security:form-login login-page="/login"/>
    <security:http-basic entry-point-ref="http403ForbiddenEntryPoint"/>
    <security:csrf token-repository-ref="csrfTokenRepository"/>
    <security:custom-filter after="CSRF_FILTER" ref="csrfHeaderFilter"/>
    <security:remember-me key="DEVELNOTES_REMEMBER_TOKEN" services-ref="rememberMeServices"/>
  </security:http>

  <security:authentication-manager alias="authenticationManager">
    <security:authentication-provider user-service-ref="userDetailsServiceSecurity">
      <security:password-encoder hash="sha">
        <security:salt-source user-property="username"/>
      </security:password-encoder>
    </security:authentication-provider>
  </security:authentication-manager>

</beans>